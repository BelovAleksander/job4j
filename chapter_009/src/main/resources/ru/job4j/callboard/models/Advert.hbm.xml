<hibernate-mapping>
    <class name="ru.job4j.callboard.models.Advert" table="adverts">
        <id name="vin" column="vin"/>
        <property name="title" type="java.lang.String" column="title"/>
        <property name="status" type="java.lang.Boolean" column="status"/>
        <property name="price" type="java.lang.Integer" column="price"/>
        <property name="description" type="java.lang.String" column="description"/>
        <property name="mileage" type="java.lang.Integer" column="mileage"/>
        <property name="photo" type="java.lang.String" column="photo"/>
        <many-to-one name="owner" column="user_id" lazy="false"
                     class="ru.job4j.callboard.models.User" />
        <many-to-one name="color" column="color_id" lazy="false"
                     class="ru.job4j.callboard.models.Color" />
        <many-to-one name="brand" column="brand_id" lazy="false"
                     class="ru.job4j.callboard.models.Brand" />
        <many-to-one name="model" column="model_id" lazy="false"
                     class="ru.job4j.callboard.models.Model" />
        <property name="createdDate" type="java.util.Date" column="created_date"/>

        <filter name="limitByBrand" condition=":currentBrandId = brand_id"/>
        <filter name="limitByDate" condition="current_date = created_date"/>
        <filter name="limitByPhoto" condition="photo is not null"/>
    </class>
        <filter-def name="limitByBrand">
            <filter-param name="currentBrandId" type="int"/>
        </filter-def>
        <filter-def name="limitByDate">
        </filter-def>
        <filter-def name="limitByPhoto">
        </filter-def>
</hibernate-mapping>